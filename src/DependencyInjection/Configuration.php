<?php

namespace Smoq\SimsyCMS\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

class Configuration implements ConfigurationInterface
{
    public function getConfigTreeBuilder(): TreeBuilder
    {
        $treeBuilder = new TreeBuilder('simsy_cms');

        $treeBuilder->getRootNode()
            ->children()
                ->arrayNode('custom_blocks')
                    ->arrayPrototype()
                        ->children()
                            ->scalarNode('class')
                                ->isRequired()
                                ->cannotBeEmpty()
                            ->end()
                            ->scalarNode('name')
                                ->isRequired()
                                ->cannotBeEmpty()
                            ->end()
                            ->scalarNode('description')
                                ->defaultNull()
                            ->end()
                            ->scalarNode('form_class')
                                ->defaultNull()
                            ->end()
                            ->scalarNode('template_path')
                                ->isRequired()
                                ->cannotBeEmpty()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('image_compression')
                    ->children()
                        ->booleanNode('enabled')
                            ->defaultValue(true)
                        ->end()
                        ->integerNode('quality')
                            ->defaultValue(80)
                            ->min(0)
                            ->max(100)
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('video_compression')
                    ->children()
                        ->booleanNode('enabled')
                            ->defaultValue(true)
                        ->end()
                        ->arrayNode('ffmpeg_config')
                            ->children()
                                ->arrayNode('ffmpeg')
                                    ->children()
                                        ->scalarNode('binaries')
                                            ->cannotBeEmpty()
                                        ->end()
                                    ->end()
                                ->end()
                                ->arrayNode('ffprobe')
                                    ->children()
                                        ->scalarNode('binaries')
                                            ->cannotBeEmpty()
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                        ->scalarNode('audio_codec')
                            ->cannotBeEmpty()
                            ->defaultValue('aac')
                        ->end()
                        ->scalarNode('video_codec')
                            ->cannotBeEmpty()
                            ->defaultValue('libx264')
                        ->end()
                        ->integerNode('video_kilo_bitrate')
                            ->defaultValue(500)
                            ->min(0)
                        ->end()
                        ->integerNode('audio_kilo_bitrate')
                            ->defaultValue(128)
                            ->min(1)
                        ->end()
                        ->integerNode('audio_channels')
                            ->defaultValue(2)
                            ->min(1)
                        ->end()
                        ->scalarNode('video_extension')
                            ->cannotBeEmpty()
                            ->defaultValue('mp4')
                        ->end()
                    ->end()
                ->end()
            ->end();

        return $treeBuilder;
    }
}